# This is a basic workflow to help you get started with Actions

name: Build_VIPM_Library

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches:
      - main
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build_VIPM_Library:
    # The type of runner that the job will run on
    runs-on: [self-hosted, lv2014]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Print environment variables exposed by this action
        run: |
          echo "CI_REPOSITORY_SLUG=$Env:CI_REPOSITORY_SLUG"
          echo "CI_REPOSITORY_OWNER=$Env:CI_REPOSITORY_OWNER"
          echo "CI_REPOSITORY_OWNER_SLUG=$Env:CI_REPOSITORY_OWNER_SLUG"
          echo "CI_REPOSITORY_NAME=$Env:CI_REPOSITORY_NAME"
          echo "CI_REPOSITORY_NAME_SLUG=$Env:CI_REPOSITORY_NAME_SLUG"
          echo "CI_REPOSITORY=$Env:CI_REPOSITORY"
          echo "CI_REF_SLUG=$Env:CI_REF_SLUG"
          echo "CI_ACTION_REF_NAME=$Env:CI_ACTION_REF_NAME"
          echo "CI_ACTION_REF_NAME_SLUG=$Env:CI_ACTION_REF_NAME_SLUG"
          echo "CI_REF_NAME=$Env:CI_REF_NAME"
          echo "CI_REF_NAME_SLUG=$Env:CI_REF_NAME_SLUG"
          echo "CI_REF=$Env:CI_REF"
          echo "CI_HEAD_REF_SLUG=$Env:CI_HEAD_REF_SLUG"
          echo "CI_HEAD_REF=$Env:CI_HEAD_REF"
          echo "CI_BASE_REF_SLUG=$Env:CI_BASE_REF_SLUG"
          echo "CI_BASE_REF=$Env:CI_BASE_REF"
          echo "CI_SHA_SHORT=$Env:CI_SHA_SHORT"
          echo "CI_SHA=$Env:CI_SHA"
          echo "CI_PR_SHA_SHORT=$Env:CI_PR_SHA_SHORT"
          echo "CI_PR_SHA=$Env:CI_PR_SHA"
          echo "CI_PR_NUMBER=$Env:CI_PR_NUMBER"
          echo "CI_PR_ID=$Env:CI_PR_ID"
          echo "CI_PR_TITLE=$Env:CI_PR_TITLE"
          echo "CI_PR_DESCRIPTION=$Env:CI_PR_DESCRIPTION"
          echo "CI_ACTOR=$Env:CI_ACTOR"
          echo "CI_EVENT_NAME=$Env:CI_EVENT_NAME"
          echo "CI_RUN_ID=$Env:CI_RUN_ID"
          echo "CI_RUN_NUMBER=$Env:CI_RUN_NUMBER"
          echo "CI_WORKFLOW=$Env:CI_WORKFLOW"
          echo "CI_ACTION=$Env:CI_ACTION"
      - name: Print environment variables exposed by GitHub
        run: |
          echo "GITHUB_ACTOR=$Env:GITHUB_ACTOR"
          echo "GITHUB_REPOSITORY=$Env:GITHUB_REPOSITORY"
          echo "GITHUB_SHA=$Env:GITHUB_SHA"
          echo "GITHUB_REF=$Env:GITHUB_REF"
          echo "GITHUB_HEAD_REF=$Env:GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF=$Env:GITHUB_BASE_REF"
          echo "GITHUB_EVENT_NAME=$Env:GITHUB_EVENT_NAME"
          echo "GITHUB_RUN_ID=$Env:GITHUB_RUN_ID"
          echo "GITHUB_RUN_NUMBER=$Env:GITHUB_RUN_NUMBER"
          echo "GITHUB_WORKFLOW=$Env:GITHUB_WORKFLOW"
          echo "GITHUB_ACTION=$Env:GITHUB_ACTION"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: BuildDailyVIP
        id: build-vip
        uses: LV-APT/lvCICD@main
        with:
          LabVIEW_Version: 2014
          Operation: vipm_BuildDailyVIP
          Parameter1: ${{ github.workspace }}\NEVSTOP-3rdParty-Dependencies.vipb
          Parameter2: NO

      - id: vip-name
        run:
          $vipName=Split-Path -Path ${{ steps.build-vip.outputs.Result }} -Leaf;
          Write-Host "::set-output name=vipName::"$vipName""
        shell: powershell

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          # Artifact name
          name: ${{ steps.vip-name.outputs.vipName }}
          path: ${{ steps.build-vip.outputs.Result }}
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: warn
          retention-days: 90

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.VIPM_FTP_IP }}
          port: ${{ secrets.VIPM_FTP_PORT }}
          username: ${{ secrets.VIPM_FTP_USER }}
          password: ${{ secrets.VIPM_FTP_PASSWORD }}
          local-dir: ./vip/
          server-dir: /nevstop-lab/NEVSTOP-3rdParty-Dependencies/
